#!/bin/bash

set -ue

echo_pending() {
  echo -n "${1}... " >&2
}

echo_ok() {
  echo -e "\033[32m${1:-"ok"}\033[0m" >&2
}

echo_red() {
  echo -e "\033[31m${1}\033[0m" >&2
}

help() {
  MESSAGE=${1:-""}
  EXIT_CODE=${2:-1}
  [[ -n "$MESSAGE" ]] && echo_red "$MESSAGE
  "
  echo "
Usage: $(basename "$0") [ -u|--unset | [-t|--terraform] [-r|--region][--profile[=]<value>]] [profile]

profile: profile (known by awscli) where to get access key id and secret access key through aws configure get.

If not provided, default profile will be used.

-b|--bundler output bundler related variables (Gemfury)
   -h|--help show this help
   -k|--keys export credentials keys
   -p|--profile export profile
   -r|--region export region
   -t|--terraform : also export terraform variables (TF_VAR_xyz) for (most of) AWS environment variables
   -u|--unset unset all environment variables managed by this script (will run first)
   " >&2
  exit "${EXIT_CODE}"
}

command -v aws > /dev/null || help "Please install aws CLI before running this script."

AWS_CONFIG_FILE=${HOME}/.aws/config
EXPORT_PROFILE="no"
EXPORT_REGION="no"
EXPORT_ROLE_ARN="no"
TERRAFORM_OUTPUT="no"
KEYS_OUTPUT="no"
BUNDLER_OUTPUT="no"
UNSET_ALL="no"
GITHUB_OUTPUT="no"

unset_all () {
  echo "unset AWS_ACCESS_KEY"
  echo "unset AWS_ACCESS_KEY_ID"
  echo "unset AWS_DEFAULT_PROFILE"
  echo "unset AWS_DEFAULT_REGION"
  echo "unset AWS_PROFILE"
  echo "unset AWS_REGION"
  echo "unset AWS_SDK_LOAD_CONFIG"
  echo "unset AWS_SECRET_ACCESS_KEY"
  echo "unset AWS_SECRET_KEY"
  echo "unset AWS_SESSION_TOKEN"
  echo "unset TF_VAR_aws_region"
  echo "unset TF_VAR_aws_access_key_id"
  echo "unset TF_VAR_aws_secret_access_key"
  echo "unset AWS_SDK_LOAD_CONFIG"
  echo ""
  exit 0
}

if [[ $# -gt 0 ]]
then
  set +u
  while :; do
    case $1 in
      -h|-\?|--help)
        help "" 0
        ;;
      -b|--bundler)
        BUNDLER_OUTPUT="yes"
        ;;
      -t|terraform)
        TERRAFORM_OUTPUT="yes"
        ;;
      -k|--keys)
        KEYS_OUTPUT="yes"
        ;;
      -u|--unset)
        UNSET_ALL="yes"
        ;;
      -p|--profile)
        EXPORT_PROFILE="yes"
        # if [ "$2" ]; then
        #   EXPORT_PROFILE=$2
        #   shift
        # else
        #   help "$1 require a profile name"
        # fi
        ;;
      # -a|--arn|--role-arn)
      #   EXPORT_ROLE_ARN="yes"
      #   ;;
      -r|--region)
        EXPORT_REGION="yes"
        ;;
      # -p=?*|--profile=?*)
      #   EXPORT_PROFILE=${1#*=}
      #   ;;
      -?*)
        help "unknown option $1"
        ;;
       *)
         SOURCE_PROFILE=${1#*=}
         break
    esac
    shift
  done
  set -u
fi

SOURCE_PROFILE="${1:-default}"

# get keys
AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id  --profile "$SOURCE_PROFILE")
AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key  --profile "$SOURCE_PROFILE")

[[ -z "$AWS_ACCESS_KEY_ID" ]] && help "AWS_ACCESS_KEY_ID empty, failed to source $SOURCE_PROFILE profile"
[[ -z "$AWS_SECRET_ACCESS_KEY" ]] && help "AWS_SECRET_ACCESS_KEY empty, failed to source $SOURCE_PROFILE profile"

[[ "$UNSET_ALL" = "yes" ]] && unset_all

# region export
if [[ "$EXPORT_REGION" = "yes" ]]
then
  AWS_DEFAULT_REGION=$(aws configure get region  --profile "$SOURCE_PROFILE")
  [[ -z "$AWS_DEFAULT_REGION" ]] && help "DEFAULT_REGION empty, failed to source $SOURCE_PROFILE profile"
  if [[ "$TERRAFORM_OUTPUT" = "yes" ]]
  then
    echo "export TF_VAR_aws_region=$AWS_DEFAULT_REGION"
  else
    echo "export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION"
    echo "export AWS_REGION=$AWS_DEFAULT_REGION"
  fi
fi

if [[ "$KEYS_OUTPUT" = "yes" ]]
then
  if [[ "$TERRAFORM_OUTPUT" = "yes" ]]
  then
    echo "export TF_VAR_aws_secret_access_key=\"$AWS_SECRET_ACCESS_KEY\""
    echo "export TF_VAR_aws_access_key_id=\"$AWS_ACCESS_KEY_ID\""
  else
    echo "export AWS_ACCESS_KEY_ID=\"$AWS_ACCESS_KEY_ID\""
    echo "export AWS_SECRET_ACCESS_KEY=\"$AWS_SECRET_ACCESS_KEY\""
  fi
fi

if [[ "$BUNDLER_OUTPUT" = "yes" ]]
then
  [[ -n "${BUNDLE_IGNORE_CONFIG+x}" ]] && help "BUNDLE_IGNORE_CONFIG set, exiting" 1
  GEMFURY_TOKEN=$(grep FURY "${HOME}/.bundle/config" | cut -f 2 -d ' ' |tr -d '"')
  echo "export BUNDLE_GEM__FURY__IO=${GEMFURY_TOKEN}"
fi
# profile export
PROFILES=($(awk '{if ($1 ~/\[/) print $2}' $AWS_CONFIG_FILE | sed "1d" |tr -d ']'))

if [[ "$EXPORT_PROFILE" = "yes" ]]
then
  [[ ! " ${PROFILES[@]} " =~ " ${SOURCE_PROFILE} " ]] && help "Profile $SOURCE_PROFILE not found"
  echo "export AWS_DEFAULT_PROFILE=$SOURCE_PROFILE"
  echo "export AWS_PROFILE=$SOURCE_PROFILE"
fi

# ECR Credential Helper, needed for assume roles, see https://github.com/aws-samples/aws-microservices-deploy-options/blob/master/skaffold.md#install-ecr-credential-helper
echo ""
echo "export AWS_SDK_LOAD_CONFIG=true"
echo ""
